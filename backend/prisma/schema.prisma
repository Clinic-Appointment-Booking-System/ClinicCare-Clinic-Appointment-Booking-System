// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------
// USERS (All roles)
// --------------------
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(PATIENT)
  createdAt DateTime @default(now())
  doctor    Doctor?
  patient   Patient?
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

// --------------------
// DOCTORS
// --------------------
model Doctor {
  id             Int           @id @default(autoincrement())
  userId         Int           @unique
  specialization String
  bio            String?
  availability   Json? // store availability in JSON (day, time slots)
  user           User          @relation(fields: [userId], references: [id])
  appointments   Appointment[]
}

// --------------------
// PATIENTS
// --------------------
model Patient {
  id           Int           @id @default(autoincrement())
  userId       Int           @unique
  phone        String?
  address      String?
  user         User          @relation(fields: [userId], references: [id])
  appointments Appointment[]
}

// --------------------
// APPOINTMENTS
// --------------------
model Appointment {
  id              Int      @id @default(autoincrement())
  doctorId        Int
  patientId       Int
  appointmentDate DateTime
  reason          String?
  status          Status   @default(PENDING)
  createdAt       DateTime @default(now())
  doctor          Doctor   @relation(fields: [doctorId], references: [id])
  patient         Patient  @relation(fields: [patientId], references: [id])
}

enum Status {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
